; ModuleID = 'SimpleTest.ll'
source_filename = "SimpleTest.c"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.10.0"

; Function Attrs: noinline nounwind ssp uwtable
define void @test1(i32, i32, i32, i32, i32, i32, i32) #0 {
  %8 = add nsw i32 %0, %1
  %9 = add nsw i32 %8, 5
  %10 = add nsw i32 %0, %1
  %11 = add nsw i32 %10, 5
  %12 = add nsw i32 %9, %11
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define void @test2(i32, i32, i32, i32, i32) #0 {
  %6 = add nsw i32 %3, %4
  %7 = add nsw i32 %3, %4
  %8 = add nsw i32 %3, %4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define void @test3(i32, i32, i32, i32, i32, i32) #0 {
  %7 = add nsw i32 %3, %4
  %8 = add nsw i32 %3, %4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define void @test4(i32, i32, i32, i32) #0 {
  %5 = add nsw i32 %1, %2
  %6 = sub nsw i32 %5, %3
  %7 = add nsw i32 %6, %2
  %8 = sub nsw i32 %5, %3
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define void @test5(i32, i32, i32, i32, i32) #0 {
  %6 = mul nsw i32 %1, %2
  %7 = add nsw i32 %6, %1
  %8 = mul nsw i32 %1, %7
  %9 = add nsw i32 %7, 5
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define void @test6(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) #0 {
  %12 = mul nsw i32 %5, %6
  %13 = add nsw i32 %12, 40
  %14 = mul nsw i32 150, %13
  %15 = mul nsw i32 %5, %6
  %16 = mul nsw i32 %5, 10
  %17 = add nsw i32 %12, %16
  ret void
}

attributes #0 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"clang version 6.0.1 (tags/RELEASE_601/final)"}
